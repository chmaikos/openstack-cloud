#cloud-config

# Database Server Cloud-Init Configuration
# Clones from GitHub and sets up PostgreSQL database with monitoring

hostname: db-server
manage_etc_hosts: true

# Update system packages
package_update: true
package_upgrade: true

# Install essential packages
packages:
  - postgresql-14
  - postgresql-client-14
  - python3
  - python3-pip
  - git
  - curl
  - openssh-server
  - wget
  - htop
  - iotop
  - sysstat

# Setup SSH access
ssh_pwauth: false
disable_root: true

# Setup PostgreSQL
write_files:
  - path: /etc/postgresql/14/main/conf.d/custom.conf
    content: |
      # Custom PostgreSQL configuration
      listen_addresses = '*'
      max_connections = 100
      shared_buffers = 128MB
      effective_cache_size = 512MB
      maintenance_work_mem = 64MB
      checkpoint_completion_target = 0.9
      wal_buffers = 16MB
      default_statistics_target = 100
      random_page_cost = 1.1
      effective_io_concurrency = 200
      work_mem = 4MB
      min_wal_size = 1GB
      max_wal_size = 4GB

# System setup and application deployment
runcmd:
  # Create application directory
  - mkdir -p /home/ubuntu/app
  - chown ubuntu:ubuntu /home/ubuntu/app
  
  # Clone the GitHub repository
  - cd /home/ubuntu && git clone https://github.com/chmaikos/openstack-cloud.git app
  - chown -R ubuntu:ubuntu /home/ubuntu/app
  
  # Configure PostgreSQL
  - systemctl enable postgresql
  - systemctl start postgresql
  
  # Create database and user
  - sudo -u postgres psql -c "CREATE DATABASE cloudapp;"
  - sudo -u postgres psql -c "CREATE USER cloudapp WITH PASSWORD 'cloudapp123';"
  - sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE cloudapp TO cloudapp;"
  - sudo -u postgres psql -c "ALTER USER cloudapp CREATEDB;"
  
  # Install Python dependencies for database initialization
  - cd /home/ubuntu/app/application && pip3 install -r requirements.txt
  
  # Initialize database schema (run as ubuntu user)
  - su - ubuntu -c "cd /home/ubuntu/app/application && python3 init_db.py"
  
  # Configure PostgreSQL to accept connections from web server
  - echo "host    cloudapp    cloudapp    10.0.0.0/8    md5" >> /etc/postgresql/14/main/pg_hba.conf
  - echo "host    cloudapp    cloudapp    172.16.0.0/12 md5" >> /etc/postgresql/14/main/pg_hba.conf
  - echo "host    cloudapp    cloudapp    192.168.0.0/16 md5" >> /etc/postgresql/14/main/pg_hba.conf
  
  # Restart PostgreSQL to apply changes
  - systemctl restart postgresql
  
  # Create comprehensive monitoring script
  - |
    cat > /home/ubuntu/monitor_db.sh << 'EOF'
    #!/bin/bash
    echo "=== Database Server Monitoring ==="
    echo "Timestamp: $(date)"
    echo ""
    echo "=== System Resources ==="
    echo "CPU Usage: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
    echo "Memory Usage: $(free | grep Mem | awk '{printf("%.2f%%", $3/$2 * 100.0)}')"
    echo "Disk Usage: $(df -h / | awk 'NR==2 {print $5}')"
    echo ""
    echo "=== PostgreSQL Status ==="
    echo "PostgreSQL Service: $(systemctl is-active postgresql)"
    echo "PostgreSQL Connections: $(sudo -u postgres psql -d cloudapp -c 'SELECT count(*) FROM pg_stat_activity;' -t | xargs)"
    echo ""
    echo "=== Database Statistics ==="
    sudo -u postgres psql -d cloudapp -c "
    SELECT 
        schemaname,
        tablename,
        attname,
        n_distinct,
        correlation
    FROM pg_stats 
    WHERE schemaname = 'public' 
    LIMIT 5;
    " 2>/dev/null || echo "No statistics available"
    echo ""
    echo "=== Active Queries ==="
    sudo -u postgres psql -d cloudapp -c "
    SELECT 
        pid,
        usename,
        application_name,
        client_addr,
        state,
        query_start,
        query
    FROM pg_stat_activity 
    WHERE state = 'active' 
    AND query NOT LIKE '%pg_stat_activity%'
    LIMIT 3;
    " 2>/dev/null || echo "No active queries"
    EOF
  - chmod +x /home/ubuntu/monitor_db.sh
  - chown ubuntu:ubuntu /home/ubuntu/monitor_db.sh
  
  # Create a simple health check script
  - |
    cat > /home/ubuntu/health_check.sh << 'EOF'
    #!/bin/bash
    echo "Database server health check:"
    echo "PostgreSQL status: $(systemctl is-active postgresql)"
    echo "Database connection test:"
    sudo -u postgres psql -d cloudapp -c "SELECT version();" 2>/dev/null && echo "Database connection: OK" || echo "Database connection: FAILED"
    echo "Database tables:"
    sudo -u postgres psql -d cloudapp -c "\dt" 2>/dev/null || echo "No tables found"
    EOF
  - chmod +x /home/ubuntu/health_check.sh
  - chown ubuntu:ubuntu /home/ubuntu/health_check.sh
  
  # Setup log rotation for monitoring
  - |
    cat > /etc/logrotate.d/cloudapp-monitoring << 'EOF'
    /home/ubuntu/monitoring.log {
        daily
        missingok
        rotate 7
        compress
        notifempty
        create 644 ubuntu ubuntu
        postrotate
            echo "$(date): Log rotated" >> /home/ubuntu/monitoring.log
        endscript
    }
    EOF

# Final message
final_message: "Database server setup completed! PostgreSQL is running and database is initialized." 