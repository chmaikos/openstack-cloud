#cloud-config

# Web Server Cloud-Init Configuration
# Clones from GitHub and sets up FastAPI application with nginx

hostname: web-server
manage_etc_hosts: true

# Update system packages
package_update: true
package_upgrade: true

# Install essential packages
packages:
  - python3
  - python3-pip
  - python3-venv
  - nginx
  - git
  - curl
  - postgresql-client-14
  - openssh-server
  - wget
  - supervisor
  - htop
  - iotop
  - sysstat
  - apache2-utils

# Setup SSH access
ssh_pwauth: false
disable_root: true

# Setup nginx configuration
write_files:
  - path: /etc/nginx/sites-available/cloudapp
    content: |
      server {
          listen 80;
          server_name _;
          
          location / {
              proxy_pass http://127.0.0.1:8000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
          
          location /health {
              proxy_pass http://127.0.0.1:8000/health;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
          
          location /static/ {
              alias /home/ubuntu/app/application/static/;
          }
      }

  - path: /etc/systemd/system/cloudapp.service
    content: |
      [Unit]
      Description=FastAPI Cloud Application
      After=network.target postgresql.service
      Wants=postgresql.service
      
      [Service]
      Type=simple
      User=ubuntu
      Group=ubuntu
      WorkingDirectory=/home/ubuntu/app/application
      Environment=PYTHONPATH=/home/ubuntu/app/application
      Environment=DB_HOST=db-server
      Environment=DB_NAME=cloudapp
      Environment=DB_USER=cloudapp
      Environment=DB_PASSWORD=cloudapp123
      Environment=DB_PORT=5432
      Environment=APP_HOST=0.0.0.0
      Environment=APP_PORT=8000
      ExecStart=/home/ubuntu/app/application/venv/bin/uvicorn app:app --host 0.0.0.0 --port 8000 --reload
      ExecReload=/bin/kill -HUP $MAINPID
      Restart=always
      RestartSec=10
      StandardOutput=journal
      StandardError=journal
      
      [Install]
      WantedBy=multi-user.target

# System setup and application deployment
runcmd:
  # Create application directory
  - mkdir -p /home/ubuntu/app
  - chown ubuntu:ubuntu /home/ubuntu/app
  
  # Clone the GitHub repository
  - cd /home/ubuntu && git clone https://github.com/chmaikos/openstack-cloud.git app
  - chown -R ubuntu:ubuntu /home/ubuntu/app
  
  # Create virtual environment and install dependencies
  - cd /home/ubuntu/app/application && python3 -m venv venv
  - cd /home/ubuntu/app/application && . venv/bin/activate && pip install -r requirements.txt
  - chown -R ubuntu:ubuntu /home/ubuntu/app/application/venv
  
  # Create static directory
  - mkdir -p /home/ubuntu/app/application/static
  - chown ubuntu:ubuntu /home/ubuntu/app/application/static
  
  # Set environment variables for the application
  - echo 'export DB_HOST=db-server' >> /home/ubuntu/.bashrc
  - echo 'export DB_NAME=cloudapp' >> /home/ubuntu/.bashrc
  - echo 'export DB_USER=cloudapp' >> /home/ubuntu/.bashrc
  - echo 'export DB_PASSWORD=cloudapp123' >> /home/ubuntu/.bashrc
  - echo 'export DB_PORT=5432' >> /home/ubuntu/.bashrc
  - echo 'export APP_HOST=0.0.0.0' >> /home/ubuntu/.bashrc
  - echo 'export APP_PORT=8000' >> /home/ubuntu/.bashrc
  
  # Enable nginx site first
  - ln -sf /etc/nginx/sites-available/cloudapp /etc/nginx/sites-enabled/
  - rm -f /etc/nginx/sites-enabled/default
  
  # Enable and start nginx
  - systemctl enable nginx
  - systemctl start nginx
  
  # Setup systemd service for the application
  - systemctl daemon-reload
  - systemctl enable cloudapp
  
  # Create startup script for the application
  - |
    cat > /home/ubuntu/start_app.sh << 'EOF'
    #!/bin/bash
    cd /home/ubuntu/app/application
    source venv/bin/activate
    source ~/.bashrc
    uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    EOF
  - chmod +x /home/ubuntu/start_app.sh
  - chown ubuntu:ubuntu /home/ubuntu/start_app.sh
  
  # Wait for virtual environment to be ready
  - sleep 10
  
  # Verify virtual environment exists and is properly set up
  - test -f /home/ubuntu/app/application/venv/bin/uvicorn && echo "Virtual environment ready" || echo "Virtual environment not ready"
  - test -f /home/ubuntu/app/application/venv/bin/pip && echo "Pip available" || echo "Pip not available"
  
  # Start the application with systemd
  - systemctl start cloudapp
  
  # Wait for application to start
  - sleep 15
  
  # Verify application is running
  - systemctl status cloudapp || echo "Application not started yet"
  
  # Test if the application is responding
  - sleep 5 && curl -s http://localhost:8000/health >/dev/null 2>&1 && echo "Application health check passed" || echo "Application health check failed"
  
  # Test nginx proxy
  - sleep 5 && curl -s http://localhost/health >/dev/null 2>&1 && echo "Nginx proxy health check passed" || echo "Nginx proxy health check failed"
  
  # Reload nginx to ensure configuration is applied
  - systemctl reload nginx

# Final message
final_message: "Web server setup completed! FastAPI application is running with nginx proxy." 